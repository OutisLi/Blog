(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{353:function(s,a,t){s.exports=t.p+"assets/img/40.64b5a4ec.png"},354:function(s,a,t){s.exports=t.p+"assets/img/41.6f90f7f4.png"},355:function(s,a,t){s.exports=t.p+"assets/img/42.17353efa.png"},439:function(s,a,t){"use strict";t.r(a);var e=t(14),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_2024-03-21-4-data-wrangling"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2024-03-21-4-data-wrangling"}},[s._v("#")]),s._v(" 2024.03.21-4. Data Wrangling")]),s._v(" "),a("h2",{attrs:{id:"_1-journalctl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-journalctl"}},[s._v("#")]),s._v(" 1. journalctl")]),s._v(" "),a("p",[s._v("查看所有日志（默认情况下 ，只保存本次启动的日志）")]),s._v(" "),a("p",[s._v("journalctl")]),s._v(" "),a("p",[s._v("查看内核日志（不显示应用日志）")]),s._v(" "),a("p",[s._v("journalctl -k")]),s._v(" "),a("p",[s._v("查看系统本次启动的日志")]),s._v(" "),a("p",[s._v("journalctl -b")]),s._v(" "),a("p",[s._v("journalctl -b -0")]),s._v(" "),a("p",[s._v("查看上一次启动的日志（需更改设置）")]),s._v(" "),a("p",[s._v("journalctl -b -1")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" myserver journalctl "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" sshd\n")])])]),a("p",[s._v("这里我们使用管道将一个远程服务器上的文件传递给本机的  "),a("code",[s._v("grep")]),s._v("  程序！ "),a("code",[s._v("ssh")]),s._v("  太牛了，下一节课我们会讲授命令行环境，届时我们会详细讨论  "),a("code",[s._v("ssh")]),s._v("  的相关内容。此时我们打印出的内容，仍然比我们需要的要多得多，读起来也非常费劲。我们来改进一下：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" myserver "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'journalctl | grep sshd | grep \"Disconnected from\"'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("less")]),s._v("\n")])])]),a("p",[s._v("多出来的引号是什么作用呢？这么说吧，我们的日志是一个非常大的文件，把这么大的文件流直接传输到我们本地的电脑上再进行过滤是对流量的一种浪费。因此我们采取另外一种方式，我们先在远端机器上过滤文本内容，然后再将结果传输到本机。 "),a("code",[s._v("less")]),s._v("  为我们创建来一个文件分页器，使我们可以通过翻页的方式浏览较长的文本。")]),s._v(" "),a("p",[s._v("为了进一步节省流量，我们甚至可以将当前过滤出的日志保存到文件中，这样后续就不需要再次通过网络访问该文件了：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" myserver "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'journalctl | grep sshd | grep \"Disconnected from\"'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ssh.log\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("less")]),s._v(" ssh.log\n")])])]),a("p",[s._v("过滤结果中仍然包含不少没用的数据。我们有很多办法可以删除这些无用的数据，但是让我们先研究一下  "),a("code",[s._v("sed")]),s._v("  这个非常强大的工具。")]),s._v(" "),a("p",[a("code",[s._v("sed")]),s._v("  是一个基于文本编辑器"),a("code",[s._v("ed")]),s._v("构建的”流编辑器” 。在  "),a("code",[s._v("sed")]),s._v("  中，您基本上是利用一些简短的命令来修改文件，而不是直接操作文件的内容（尽管您也可以选择这样做）。相关的命令行非常多，但是最常用的是  "),a("code",[s._v("s")]),s._v("，即"),a("em",[s._v("替换")]),s._v("命令，例如我们可以这样写：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" myserver journalctl\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" sshd\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Disconnected from"')]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*Disconnected from //'")]),s._v("\n")])])]),a("p",[s._v("上面这段命令中，我们使用了一段简单的"),a("em",[s._v("正则表达式")]),s._v("。正则表达式是一种非常强大的工具，可以让我们基于某种模式来对字符串进行匹配。"),a("code",[s._v("s")]),s._v("  命令的语法如下："),a("code",[s._v("s/REGEX/SUBSTITUTION/")]),s._v(", 其中  "),a("code",[s._v("REGEX")]),s._v("  部分是我们需要使用的正则表达式，而  "),a("code",[s._v("SUBSTITUTION")]),s._v("  是用于替换匹配结果的文本。")]),s._v(" "),a("h2",{attrs:{id:"_2-正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-正则表达式"}},[s._v("#")]),s._v(" 2. 正则表达式")]),s._v(" "),a("p",[s._v("正则表达式通常以（尽管并不总是） "),a("code",[s._v("/")]),s._v(" 开始和结束。大多数的 ASCII 字符都表示它们本来的含义，但是有一些字符确实具有表示匹配行为的“特殊”含义。不同字符所表示的含义，根据正则表达式的实现方式不同，也会有所变化，这一点确实令人沮丧。常见的模式有：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v(".")]),s._v("  除换行符之外的”任意单个字符”")]),s._v(" "),a("li",[s._v("``  匹配前面字符零次或多次")]),s._v(" "),a("li",[a("code",[s._v("+")]),s._v("  匹配前面字符一次或多次")]),s._v(" "),a("li",[a("code",[s._v("[abc]")]),s._v("  匹配  "),a("code",[s._v("a")]),s._v(", "),a("code",[s._v("b")]),s._v("  和  "),a("code",[s._v("c")]),s._v("  中的任意一个")]),s._v(" "),a("li",[a("code",[s._v("(RX1|RX2)")]),s._v("  任何能够匹配"),a("code",[s._v("RX1")]),s._v("  或  "),a("code",[s._v("RX2")]),s._v("的结果")]),s._v(" "),a("li",[a("code",[s._v("^")]),s._v("  行首")]),s._v(" "),a("li",[a("code",[s._v("$")]),s._v("  行尾")])]),s._v(" "),a("p",[s._v("正则表达式会如何匹配？"),a("code",[s._v("*")]),s._v("  和  "),a("code",[s._v("+")]),s._v("  在默认情况下是贪婪模式，也就是说，它们会尽可能多的匹配文本。对于某些正则表达式的实现来说，您可以给  "),a("code",[s._v("*")]),s._v("  或  "),a("code",[s._v("+")]),s._v("  增加一个"),a("code",[s._v("?")]),s._v("  后缀使其变成非贪婪模式")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-E")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*Disconnected from (invalid |authenticating )?user .* [^ ]+ port [0-9]+( \\[preauth\\])?$//'")]),s._v("\n")])])]),a("p",[s._v("IP 地址正则表达式：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("?:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("?:1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("?:2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("?:25"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("?:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("-9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("?:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("?:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("?:1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("?:2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("?:25"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("?:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("-9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("?:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),s._v("\n")])])]),a("p",[s._v("我们实际上希望能够将用户名"),a("em",[s._v("保留")]),s._v("下来。对此，我们可以使用“捕获组（capture groups）”来完成。被圆括号内的正则表达式匹配到的文本，都会被存入一系列以编号区分的捕获组中。捕获组的内容可以在替换字符串时使用（有些正则表达式的引擎甚至支持替换表达式本身），例如"),a("code",[s._v("\\1")]),s._v("、 "),a("code",[s._v("\\2")]),s._v("、"),a("code",[s._v("\\3")]),s._v("等等，因此可以使用如下命令：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-E")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*Disconnected from (invalid |authenticating )?user (.*) [^ ]+ port [0-9]+( \\[preauth\\])?$/\\2/'")]),s._v("\n")])])]),a("h3",{attrs:{id:"_2-1-正则匹配基本知识及概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-正则匹配基本知识及概念"}},[s._v("#")]),s._v(" 2.1 正则匹配基本知识及概念")]),s._v(" "),a("p",[s._v("在练习之前，需要大家知道一些基本知识，如果有一定基础的可以跳过该步骤，直接往下看。")]),s._v(" "),a("h3",{attrs:{id:"_2-2-正则表达式-字符类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-正则表达式-字符类"}},[s._v("#")]),s._v(" 2.2 正则表达式-字符类")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[abc]：代表a或者b，或者c字符中的一个。\n[^abc]：代表除a,b,c以外的任何字符。\n[a-z]：代表a-z的所有小写字符中的一个。\n[A-Z]：代表A-Z的所有大写字符中的一个。\n[0-9]：代表0-9之间的某一个数字字符。\n[a-zA-Z0-9]：代表a-z或者A-Z或者0-9之间的任意一个字符。\n[a-dm-p]：a 到 d 或 m 到 p之间的任意一个字符。\n")])])]),a("h3",{attrs:{id:"_2-3-正则表达式-逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-正则表达式-逻辑运算符"}},[s._v("#")]),s._v(" 2.3 正则表达式-逻辑运算符")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("&&：并且\n| ：或者(可以省略）\n")])])]),a("h3",{attrs:{id:"_2-4-正则表达式-预定义字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-正则表达式-预定义字符"}},[s._v("#")]),s._v(" 2.4 正则表达式-预定义字符")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("“.” ： 匹配任何字符。\n“\\d”：任何数字[0-9]的简写；\n“\\D”：任何非数字[^0-9]的简写；\n“\\s”： 空白字符：[ \\t\\n\\x0B\\f\\r] 的简写\n“\\S”： 非空白字符：[^\\s] 的简写\n“\\w”：单词字符：[a-zA-Z_0-9]的简写\n“\\W”：非单词字符：[^\\w]\n")])])]),a("h3",{attrs:{id:"_2-5-正则表达式-数量词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-正则表达式-数量词"}},[s._v("#")]),s._v(" 2.5 正则表达式-数量词")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("x? : 0次或1次\nx* : 0次到多次\nx+ : 1次或多次\nX{n} : 恰好n次\nX{n,} : 至少n次\nX{n,m}: n到m次(n和m都是包含的，最少n次，最多m次。\n")])])]),a("h2",{attrs:{id:"_3-数据整理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-数据整理"}},[s._v("#")]),s._v(" 3. 数据整理")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" myserver journalctl\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" sshd\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Disconnected from"')]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-E")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*Disconnected from (invalid |authenticating )?user (.*) [^ ]+ port [0-9]+( \\[preauth\\])?$/\\2/'")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uniq")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v("\n")])])]),a("p",[a("code",[s._v("sort")]),s._v("  会对其输入数据进行排序。"),a("code",[s._v("uniq -c")]),s._v("  会把连续出现的行折叠为一行并使用出现次数作为前缀。我们希望按照出现次数排序，过滤出最常出现的用户名：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" myserver journalctl\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" sshd\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Disconnected from"')]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-E")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*Disconnected from (invalid |authenticating )?user (.*) [^ ]+ port [0-9]+( \\[preauth\\])?$/\\2/'")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uniq")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" -nk1,1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n10")]),s._v("\n")])])]),a("p",[a("code",[s._v("sort -n")]),s._v("  会按照数字顺序对输入进行排序（默认情况下是按照字典序排序） "),a("code",[s._v("-k1,1")]),s._v("  则表示“仅基于以空格分割的第一列进行排序”。"),a("code",[s._v(",n")]),s._v("  部分表示“仅排序到第 n 个部分”，默认情况是到行尾。就本例来说，针对整个行进行排序也没有任何问题，我们这里主要是为了学习这一用法！")]),s._v(" "),a("p",[s._v("如果我们希望得到登录次数最少的用户，我们可以使用  "),a("code",[s._v("head")]),s._v("  来代替"),a("code",[s._v("tail")]),s._v("。或者使用"),a("code",[s._v("sort -r")]),s._v("来进行倒序排序。")]),s._v(" "),a("p",[s._v("相当不错。但我们只想获取用户名，而且不要一行一个地显示：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" myserver journalctl\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" sshd\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Disconnected from"')]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-E")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*Disconnected from (invalid |authenticating )?user (.*) [^ ]+ port [0-9]+( \\[preauth\\])?$/\\2/'")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uniq")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" -nk1,1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n10")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $2}'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("paste")]),s._v(" -sd,\n")])])]),a("h2",{attrs:{id:"_4-awk-另外一种编辑器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-awk-另外一种编辑器"}},[s._v("#")]),s._v(" 4. awk – 另外一种编辑器")]),s._v(" "),a("p",[a("code",[s._v("awk")]),s._v("  其实是一种编程语言，只不过它碰巧非常善于处理文本。")]),s._v(" "),a("p",[s._v("首先， "),a("code",[s._v("{print $2}")]),s._v("  的作用是什么？ "),a("code",[s._v("awk")]),s._v("  程序接受一个模式串（可选），以及一个代码块，指定当模式匹配时应该做何种操作。默认当模式串即匹配所有行（上面命令中当用法）。 在代码块中，"),a("code",[s._v("$0")]),s._v("  表示整行的内容，"),a("code",[s._v("$1")]),s._v("  到  "),a("code",[s._v("$n")]),s._v("  为一行中的 n 个区域，区域的分割基于  "),a("code",[s._v("awk")]),s._v("  的域分隔符（默认是空格，可以通过"),a("code",[s._v("-F")]),s._v("来修改）。在这个例子中，我们的代码意思是：对于每一行文本，打印其第二个部分，也就是用户名。")]),s._v(" "),a("p",[s._v("让我们康康，还有什么炫酷的操作可以做。让我们统计一下所有以"),a("code",[s._v("c")]),s._v("  开头，以  "),a("code",[s._v("e")]),s._v("  结尾，并且仅尝试过一次登录的用户。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$1 == 1 && $2 ~ /^c[^ ]*e$/ { print $2 }'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\n")])])]),a("p",[s._v("让我们好好分析一下。首先，注意这次我们为  "),a("code",[s._v("awk")]),s._v("指定了一个匹配模式串（也就是"),a("code",[s._v("{...}")]),s._v("前面的那部分内容）。该匹配要求文本的第一部分需要等于 1（这部分刚好是"),a("code",[s._v("uniq -c")]),s._v("得到的计数值），然后其第二部分必须满足给定的一个正则表达式。代码块中的内容则表示打印用户名。然后我们使用  "),a("code",[s._v("wc -l")]),s._v("  统计输出结果的行数。")]),s._v(" "),a("p",[s._v("不过，既然  "),a("code",[s._v("awk")]),s._v("  是一种编程语言，那么则可以这样：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("BEGIN "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" rows "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(" ~ /^c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("^ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*e$/ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" rows "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nEND "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" print rows "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[a("code",[s._v("BEGIN")]),s._v("  也是一种模式，它会匹配输入的开头（ "),a("code",[s._v("END")]),s._v("  则匹配结尾）。然后，对每一行第一个部分进行累加，最后将结果输出。事实上，我们完全可以抛弃  "),a("code",[s._v("grep")]),s._v("  和  "),a("code",[s._v("sed")]),s._v(" ，因为  "),a("code",[s._v("awk")]),s._v("  就可以"),a("a",{attrs:{href:"https://backreference.org/2010/02/10/idiomatic-awk",target:"_blank",rel:"noopener noreferrer"}},[s._v("解决所有问题"),a("OutboundLink")],1),s._v("。至于怎么做，就留给读者们做课后练习吧。")]),s._v(" "),a("h2",{attrs:{id:"_5-分析数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-分析数据"}},[s._v("#")]),s._v(" 5. 分析数据")]),s._v(" "),a("p",[s._v("想做数学计算也是可以的！例如这样，您可以将每行的数字加起来：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("paste")]),s._v(" -sd+ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\n")])])]),a("p",[s._v("下面这种更加复杂的表达式也可以：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2*('),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("data "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("paste")]),s._v(" -sd+"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(')"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\n")])])]),a("p",[s._v("如果您希望绘制一些简单的图表， "),a("code",[s._v("gnuplot")]),s._v("  可以帮助到您：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" myserver journalctl\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" sshd\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Disconnected from"')]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-E")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*Disconnected from (invalid |authenticating )?user (.*) [^ ]+ port [0-9]+( \\[preauth\\])?$/\\2/'")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uniq")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" -nk1,1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n10")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" gnuplot "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'set boxwidth 0.5; plot \"-\" using 1:xtic(2) with boxes'")]),s._v("\n")])])]),a("h2",{attrs:{id:"_6-exercise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-exercise"}},[s._v("#")]),s._v(" 6. Exercise")]),s._v(" "),a("h3",{attrs:{id:"_6-1-学习这篇简短的-交互式正则表达式教程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-学习这篇简短的-交互式正则表达式教程"}},[s._v("#")]),s._v(" 6.1 学习这篇简短的  "),a("a",{attrs:{href:"https://regexone.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("交互式正则表达式教程"),a("OutboundLink")],1)]),s._v(" "),a("h3",{attrs:{id:"_6-2-sed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-sed"}},[s._v("#")]),s._v(" 6.2 sed")]),s._v(" "),a("p",[s._v("统计 words 文件 ("),a("code",[s._v("/usr/share/dict/words")]),s._v(") 中包含至少三个"),a("code",[s._v("a")]),s._v("  且不以"),a("code",[s._v("'s")]),s._v("  结尾的单词个数。这些单词中，出现频率前三的末尾两个字母是什么？ "),a("code",[s._v("sed")]),s._v("的  "),a("code",[s._v("y")]),s._v("命令，或者  "),a("code",[s._v("tr")]),s._v("  程序也许可以帮你解决大小写的问题。共存在多少种词尾两字母组合？还有一个很 有挑战性的问题：哪个组合从未出现过？")]),s._v(" "),a("p",[a("img",{attrs:{src:t(353),alt:"Untitled"}})]),s._v(" "),a("p",[a("img",{attrs:{src:t(354),alt:"Untitled"}})]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#! /usr/bin/env zsh")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2.sh")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("j")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$j")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" allcomb.txt\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" words.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-P")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'(?:a.*){3,}'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-E")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/\'s$/d"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-E")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*(..)$/\\1/'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[:upper:]'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[:lower:]'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" appcomb.txt\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-vxFf")]),s._v(" appcomb.txt allcomb.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uniq")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" notappcomb.txt\n")])])]),a("h3",{attrs:{id:"_6-3-in-place"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-in-place"}},[s._v("#")]),s._v(" 6.3 in-place")]),s._v(" "),a("p",[s._v("进行原地替换听上去很有诱惑力，例如： "),a("code",[s._v("sed s/REGEX/SUBSTITUTION/ input.txt > input.txt")]),s._v("。但是这并不是一个明智的做法，为什么呢？还是说只有  "),a("code",[s._v("sed")]),s._v("是这样的? 查看  "),a("code",[s._v("man sed")]),s._v("  来完成这个问题")]),s._v(" "),a("p",[s._v("Answer:")]),s._v(" "),a("p",[s._v("当你尝试使用 "),a("code",[s._v("sed")]),s._v(" 命令进行原地替换，如使用命令 "),a("code",[s._v("sed s/REGEX/SUBSTITUTION/ input.txt > input.txt")]),s._v("，看似想要直接在源文件上执行替换操作，实际上这样做是有问题的。这个命令的问题在于它试图将输出重定向回输入文件，这并不是 "),a("code",[s._v("sed")]),s._v(" 命令或其他文本处理命令特有的问题，而是 Unix/Linux shell 处理重定向的方式所导致的。")]),s._v(" "),a("p",[s._v("当你执行上述命令时，shell 会先处理重定向（"),a("code",[s._v(">")]),s._v("），这导致 "),a("code",[s._v("input.txt")]),s._v(" 被打开用于写入并且立即被截断（即文件内容被清空），然后 "),a("code",[s._v("sed")]),s._v(" 才开始从这个现在已经是空的文件读取数据。结果是，"),a("code",[s._v("sed")]),s._v(" 没有数据可供处理，因此也就没有任何数据写回到 "),a("code",[s._v("input.txt")]),s._v(" 中，导致文件内容丢失。")]),s._v(" "),a("p",[s._v("对于 "),a("code",[s._v("sed")]),s._v("，如果你想进行原地编辑，应该使用 "),a("code",[s._v("-i")]),s._v(" 选项（或 "),a("code",[s._v("--in-place")]),s._v("），这样可以直接在文件上执行修改操作而不需要重定向输出到新文件：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/REGEX/SUBSTITUTION/'")]),s._v(" input.txt\n")])])]),a("p",[s._v("这个 "),a("code",[s._v("-i")]),s._v(" 选项告诉 "),a("code",[s._v("sed")]),s._v(" 直接修改文件内容，而不是输出到标准输出。注意，"),a("code",[s._v("-i")]),s._v(" 选项在不同的系统中可能稍有不同，某些系统可能要求为 "),a("code",[s._v("-i")]),s._v(" 指定一个扩展名，用于在修改前保存原文件的备份。")]),s._v(" "),a("p",[s._v("例如，如果你希望备份原文件，可以这样做：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i.bak")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/REGEX/SUBSTITUTION/'")]),s._v(" input.txt\n")])])]),a("p",[s._v("这会将原始的 "),a("code",[s._v("input.txt")]),s._v(" 保存为 "),a("code",[s._v("input.txt.bak")]),s._v("，并直接修改 "),a("code",[s._v("input.txt")]),s._v("。")]),s._v(" "),a("p",[s._v("总结，这并不是只有 "),a("code",[s._v("sed")]),s._v(" 会遇到的问题，任何尝试将输出重定向回输入文件的操作都可能遇到同样的问题，因为 Unix/Linux shell 会先处理重定向，导致输入文件被清空。所以，当需要原地编辑文件时，应该使用工具提供的原地编辑功能（比如 "),a("code",[s._v("sed")]),s._v(" 的 "),a("code",[s._v("-i")]),s._v(" 选项），而不是使用重定向。")]),s._v(" "),a("h3",{attrs:{id:"_6-4-开机时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-开机时间"}},[s._v("#")]),s._v(" 6.4 开机时间")]),s._v(" "),a("p",[s._v("找出您最近十次开机的开机时间平均数、中位数和最长时间。在 Linux 上需要用到  "),a("code",[s._v("journalctl")]),s._v(" ，而在 macOS 上使用  "),a("code",[s._v("log show")]),s._v("。找到每次起到开始和结束时的时间戳。")]),s._v(" "),a("p",[s._v("在 Linux 上类似这样："),a("code",[s._v("Logs begin at ...")]),s._v(" 和 "),a("code",[s._v("systemd[577]: Startup finished in ...")])]),s._v(" "),a("p",[s._v("在 macOS 上, "),a("a",{attrs:{href:"https://eclecticlight.co/2018/03/21/macos-unified-log-3-finding-your-way/",target:"_blank",rel:"noopener noreferrer"}},[s._v("查找"),a("OutboundLink")],1),s._v(": "),a("code",[s._v("=== system boot:")]),s._v(" 和 "),a("code",[s._v("Previous shutdown cause: 5")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#! /usr/bin/env zsh")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4.sh")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    journalctl "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" -"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Startup finished"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kernel"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-E")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*= (.*)s\\.$/\\1/'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ./startTime.txt\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("minTime")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" startTime.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-1")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Minimum time: '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${minTime}")]),s._v('s"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("maxTime")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" startTime.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-1")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Maximum time: '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${maxTime}")]),s._v('s"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("avgTime")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" startTime.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("paste")]),s._v(" -sd+ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bc")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1/10}'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Average time: '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${avgTime}")]),s._v('s"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("midTime")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" startTime.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("paste")]),s._v(" -sd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print ($5+$6)/2}'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Median time: '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${midTime}")]),s._v('s"')]),s._v("\n")])])]),a("p",[a("img",{attrs:{src:t(355),alt:"Untitled"}})]),s._v(" "),a("h3",{attrs:{id:"_6-5-awk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-awk"}},[s._v("#")]),s._v(" 6.5 awk")]),s._v(" "),a("p",[s._v("查看之前三次重启启动信息中不同的部分(参见  "),a("code",[s._v("journalctl")]),s._v("的"),a("code",[s._v("-b")]),s._v("  选项)。将这一任务分为几个步骤，首先获取之前三次启动的启动日志，也许获取启动日志的命令就有合适的选项可以帮助您提取前三次启动的日志，亦或者您可以使用"),a("code",[s._v("sed '0,/STRING/d'")]),s._v("  来删除"),a("code",[s._v("STRING")]),s._v("匹配到的字符串前面的全部内容。然后，过滤掉每次都不相同的部分，例如时间戳。下一步，重复记录输入行并对其计数(可以使用"),a("code",[s._v("uniq")]),s._v(" )。最后，删除所有出现过 3 次的内容（因为这些内容是三次启动日志中的重复部分）。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#! /usr/bin/env zsh")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 5.sh")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    journalctl "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" -"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" ./last3.txt\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" last3.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-E")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/.*pi\\ (.*)/'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\1"}},[s._v("\\1")]),s._v('/"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uniq")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$1!=3 {print}'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.5")]),s._v(".txt\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);