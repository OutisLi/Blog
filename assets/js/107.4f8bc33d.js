(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{468:function(t,s,n){"use strict";n.r(s);var a=n(14),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_2023-12-18-geant4自动化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2023-12-18-geant4自动化"}},[t._v("#")]),t._v(" 2023.12.18-Geant4自动化")]),t._v(" "),s("h2",{attrs:{id:"_1-cmakelists-txt与run-mac的自动创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-cmakelists-txt与run-mac的自动创建"}},[t._v("#")]),t._v(" 1. "),s("code",[t._v("CMakeLists.txt")]),t._v("与"),s("code",[t._v("run.mac")]),t._v("的自动创建")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Python script to generate CMakeLists.txt and run.mac files with customizable parameters.")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create_cmake_lists")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("project_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" executable_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" files_to_copy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    Creates a CMakeLists.txt with customizable project and executable names.\n    Args:\n    - project_name: Name of the project\n    - executable_name: Name of the executable\n    - files_to_copy: List of files to copy\n    Returns:\n    - A string containing the contents of the CMakeLists.txt file\n    """')]),t._v("\n    cmake_template "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"""cmake_minimum_required(VERSION 3.16)\nproject(')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("project_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(')\n\n# default build type: Debug\nif(NOT CMAKE_BUILD_TYPE)\n  set(CMAKE_BUILD_TYPE Debug)\nendif()\n\n#----------------------------------------------------------------------------\n# Find Geant4 package, activating all available UI and Vis drivers by default\n# You can set WITH_GEANT4_UIVIS to OFF via the command line or ccmake/cmake-gui\n# to build a batch mode only executable\n#\noption(WITH_GEANT4_UIVIS "Build example with Geant4 UI and Vis drivers" ON)\nif(WITH_GEANT4_UIVIS)\n  find_package(Geant4 REQUIRED ui_all vis_all)\nelse()\n  find_package(Geant4 REQUIRED)\nendif()\n\n#----------------------------------------------------------------------------\n# Setup Geant4 include directories and compile definitions\n# Setup include directory for this project\n#\ninclude_directories(${{PROJECT_SOURCE_DIR}}/include)\ninclude(${{Geant4_USE_FILE}})\n\n#----------------------------------------------------------------------------\n# Locate sources and headers for this project\n# NB: headers are included so they will show up in IDEs\n#\nfile(GLOB sources ${{PROJECT_SOURCE_DIR}}/src/*.cc)\nfile(GLOB headers ${{PROJECT_SOURCE_DIR}}/include/*.hh)\n\n#----------------------------------------------------------------------------\n# Add the executable, and link it to the Geant4 libraries\n#\nadd_executable(')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("executable_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" main.cc ${{sources}} ${{headers}})\n# target_compile_definitions(")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("executable_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" PUBLIC G4GEOM_USE_USOLIDS)\ntarget_link_libraries(")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("executable_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" ${{Geant4_LIBRARIES}})\n\n#----------------------------------------------------------------------------\n# Copy all scripts to the build directory, i.e. the directory in which we\n# build PKU_Trim_Geant4. This is so that we can run the executable directly\n# because it relies on these scripts being in the current working directory.\n#\nset(FILES_TO_COPY")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("files_to_copy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(')\nforeach(_script ${{FILES_TO_COPY}})\n  configure_file(\n    ${{PROJECT_SOURCE_DIR}}/${{_script}}\n    ${{PROJECT_BINARY_DIR}}/${{_script}}\n    COPYONLY\n    )\nendforeach()\n"""')])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cmake_template\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create_run_mac")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    numberOfThreads"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" outputFileName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" iondefinition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ionenergy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" numberOfIons\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    Creates a run.mac file with customizable parameters.\n    Args:\n    - numberOfThreads: Number of threads\n    - outputFileName: Name of the output file\n    - iondefinition: Ion definition (Z A Q E)\n    - ionenergy: Ion energy\n    - numberOfIons: Number of ions\n    Returns:\n    - A string containing the contents of the run.mac file\n    """')]),t._v("\n    run_mac_content "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"""# Macro file for the runtime control of the example\n\n# Minimal run.mac file for testing the application\n\n# Set number of threads\n# /run/numberOfThreads ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("numberOfThreads"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n# /tracking/verbose 2\n\n# Initialize kernel\n/run/initialize\n/myApp/setOutputFileName ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("outputFileName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n\n# Start simulation\n/gun/particle ion\n/gun/ion ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("iondefinition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n/gun/energy ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ionenergy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n/run/beamOn ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("numberOfIons"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\n"""')])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" run_mac_content\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__main__"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default values")]),t._v("\n    project_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PKU_Trim_Geant4"')]),t._v("\n    executable_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PKU_Trim_Geant4"')]),t._v("\n    files_to_copy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    init_vis.mac\n    vis.mac\n    run.mac\n    scoef.data\n    scoefh.data\n    thresholds.txt\n  """')]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Generate CMakeLists.txt")]),t._v("\n    cmake_content "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" create_cmake_lists"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("project_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" executable_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" files_to_copy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    outputFileName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"FinFET_p_2MeV.txt"')]),t._v("\n    iondefinition "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1 1 0 0"')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Z A Q E")]),t._v("\n    ionenergy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2 MeV"')]),t._v("\n    numberOfIons "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Generate run.mac")]),t._v("\n    run_mac_content "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" create_run_mac"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" outputFileName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" iondefinition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ionenergy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" numberOfIons\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Define the paths for the output files")]),t._v("\n    cmake_lists_path "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./CMakeLists.txt"')]),t._v("\n    run_mac_path "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./run.mac"')]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Write the contents to the respective files")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmake_lists_path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"w"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" cmake_file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        cmake_file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmake_content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("run_mac_path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"w"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" run_mac_file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        run_mac_file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("run_mac_content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"cmakelists-txt中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cmakelists-txt中"}},[t._v("#")]),t._v(" "),s("code",[t._v("CMakeLists.txt")]),t._v("中：")]),t._v(" "),s("p",[s("code",[t._v("executable_name")]),t._v("：生成的可执行文件名")]),t._v(" "),s("p",[s("code",[t._v("files_to_copy")]),t._v("：需要复制到build文件夹中的内容")]),t._v(" "),s("h3",{attrs:{id:"run-mac中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-mac中"}},[t._v("#")]),t._v(" "),s("code",[t._v("run.mac")]),t._v("中")]),t._v(" "),s("p",[s("code",[t._v("numberOfThreads")]),t._v("：Geant4运行时使用的核心数（若使用Docker可不填）")]),t._v(" "),s("p",[s("code",[t._v("outputFileName")]),t._v("：Geant4产生的数据文件名")]),t._v(" "),s("p",[s("code",[t._v("iondefinition")]),t._v("：入射离子类型 # Z A Q E")]),t._v(" "),s("p",[s("code",[t._v("ionenergy")]),t._v("：入射离子能量")]),t._v(" "),s("p",[s("code",[t._v("numberOfIons")]),t._v("：入射离子数")]),t._v(" "),s("h2",{attrs:{id:"_2-docker自动化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-docker自动化"}},[t._v("#")]),t._v(" 2. Docker自动化")]),t._v(" "),s("h3",{attrs:{id:"dockerfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[t._v("#")]),t._v(" "),s("code",[t._v("Dockerfile")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-docker extra-class"},[s("pre",{pre:!0,attrs:{class:"language-docker"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 原单Geant4镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" outispku/geant4:v1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定启动脚本")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" start.sh /")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" chmod +x /start.sh")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" mkdir program")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENTRYPOINT")]),t._v(" ["),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/start.sh"')]),t._v("]")]),t._v("\n")])])]),s("h3",{attrs:{id:"start-sh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#start-sh"}},[t._v("#")]),t._v(" "),s("code",[t._v("start.sh")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Source Geant4 environment scripts")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" /geant4/bin/geant4.sh\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" /geant4/share/Geant4/geant4make/geant4make.sh\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取系统的线程数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("NUM_THREADS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$(")]),t._v("nproc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" - "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /program\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建命令")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CMD_TO_ADD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/run/numberOfThreads '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NUM_THREADS")]),t._v('"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将命令添加到 run.mac 的第一行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意不要重复添加")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1i '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$CMD_TO_ADD")]),t._v('"')]),t._v(" ./run.mac\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义目录路径")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("BUILD_DIR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/program/build"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查目录是否存在")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$BUILD_DIR")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果目录存在，删除它")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$BUILD_DIR")]),t._v('"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建新的目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$BUILD_DIR")]),t._v('"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" build\ncmake "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-j")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$NUM_THREADS")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# PKU_Trim_Geant4 为程序名称（可执行文件），由CMakeLists.txt中的add_executable(PKU_Trim_Geant4 PKU_Trim_Geant4.cc)决定")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用前请修改")]),t._v("\n./PKU_Trim_Geant4 run.mac "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /dev/null "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">>")]),t._v("error.txt\n")])])]),s("ol",[s("li",[s("p",[t._v("默认采用处理器最大核心数减1作为使用的核心数量")])]),t._v(" "),s("li",[s("p",[t._v("默认程序名为"),s("code",[t._v("PKU_Trim_Geant4")]),t._v("，若在CMakeLists中修改，请重新使用Dockerfile创建镜像")]),t._v(" "),s("div",{staticClass:"language-docker extra-class"},[s("pre",{pre:!0,attrs:{class:"language-docker"}},[s("code",[t._v("docker build -t outispku/geant4:v2 . \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -t 后为新镜像名")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("创建共享文件路径并运行容器")]),t._v(" "),s("div",{staticClass:"language-docker extra-class"},[s("pre",{pre:!0,attrs:{class:"language-docker"}},[s("code",[t._v("docker run -v D:\\FinFET:/program --name geant4_program outispku/geant4:v2\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -v 后为映射本地路径到容器内（共享项目文件）（program为容器内路径，请不要修改）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --name 为容器名")]),t._v("\n")])])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);