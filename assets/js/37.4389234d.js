(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{356:function(s,a,t){s.exports=t.p+"assets/img/50.9f171ce6.png"},357:function(s,a,t){s.exports=t.p+"assets/img/51.5a54b6e7.png"},440:function(s,a,t){"use strict";t.r(a);var e=t(14),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_2024-03-21-5-command-line-interface"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2024-03-21-5-command-line-interface"}},[s._v("#")]),s._v(" 2024.03.21-5. Command Line Interface")]),s._v(" "),a("h1",{attrs:{id:"_1-任务控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-任务控制"}},[s._v("#")]),s._v(" 1. 任务控制")]),s._v(" "),a("h2",{attrs:{id:"_1-1-结束进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-结束进程"}},[s._v("#")]),s._v(" 1.1 结束进程")]),s._v(" "),a("p",[s._v("您的 shell 会使用 UNIX 提供的信号机制执行进程间通信。当一个进程接收到信号时，它会停止执行、处理该信号并基于信号传递的信息来改变其执行。就这一点而言，信号是一种"),a("em",[s._v("软件中断")]),s._v("。")]),s._v(" "),a("p",[s._v("在上面的例子中，当我们输入  "),a("code",[s._v("Ctrl-C")]),s._v("  时，shell 会发送一个"),a("code",[s._v("SIGINT")]),s._v("  信号到进程。")]),s._v(" "),a("p",[s._v("下面这个 Python 程序向您展示了捕获信号"),a("code",[s._v("SIGINT")]),s._v("  并忽略它的基本操作，它并不会让程序停止。为了停止这个程序，我们需要使用"),a("code",[s._v("SIGQUIT")]),s._v("  信号，通过输入"),a("code",[s._v("Ctrl-\\")]),s._v("可以发送该信号。")]),s._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env python")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" signal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" time\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("signum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\nI got a SIGINT, but I am not stopping"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nsignal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("signal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("signal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SIGINT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ni "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\r{}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" end"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])])]),a("p",[s._v("如果我们向这个程序发送两次  "),a("code",[s._v("SIGINT")]),s._v(" ，然后再发送一次  "),a("code",[s._v("SIGQUIT")]),s._v("，程序会有什么反应？注意  "),a("code",[s._v("^")]),s._v("  是我们在终端输入"),a("code",[s._v("Ctrl")]),s._v("  时的表示形式：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ python sigint.py\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v("^C\nI got a SIGINT, but I am not stopping\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v("^C\nI got a SIGINT, but I am not stopping\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("^"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("39913")]),s._v(" quit       python sigint.pyƒ\n")])])]),a("p",[s._v("尽管  "),a("code",[s._v("SIGINT")]),s._v("  和  "),a("code",[s._v("SIGQUIT")]),s._v("  都常常用来发出和终止程序相关的请求。"),a("code",[s._v("SIGTERM")]),s._v("  则是一个更加通用的、也更加优雅地退出信号。为了发出这个信号我们需要使用  "),a("code",[s._v("[kill](https://www.man7.org/linux/man-pages/man1/kill.1.html)")]),s._v("  命令, 它的语法是： "),a("code",[s._v("kill -TERM <PID>")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"_1-2-暂停和后台执行进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-暂停和后台执行进程"}},[s._v("#")]),s._v(" 1.2 暂停和后台执行进程")]),s._v(" "),a("p",[s._v("信号可以让进程做其他的事情，而不仅仅是终止它们。例如，"),a("code",[s._v("SIGSTOP")]),s._v("  会让进程暂停。在终端中，键入  "),a("code",[s._v("Ctrl-Z")]),s._v("  会让 shell 发送  "),a("code",[s._v("SIGTSTP")]),s._v("  信号，"),a("code",[s._v("SIGTSTP")]),s._v("是 Terminal Stop 的缩写（即"),a("code",[s._v("terminal")]),s._v("版本的 SIGSTOP）。")]),s._v(" "),a("p",[s._v("我们可以使用  "),a("code",[s._v("[fg](https://www.man7.org/linux/man-pages/man1/fg.1p.html)")]),s._v("  或  "),a("code",[s._v("[bg](http://man7.org/linux/man-pages/man1/bg.1p.html)")]),s._v("  命令恢复暂停的工作。它们分别表示在前台继续或在后台继续。")]),s._v(" "),a("p",[a("code",[s._v("[jobs](http://man7.org/linux/man-pages/man1/jobs.1p.html)")]),s._v("  命令会列出当前终端会话中尚未完成的全部任务。您可以使用 pid 引用这些任务（也可以用  "),a("code",[s._v("[pgrep](https://www.man7.org/linux/man-pages/man1/pgrep.1.html)")]),s._v("  找出 pid）。更加符合直觉的操作是您可以使用百分号 + 任务编号（"),a("code",[s._v("jobs")]),s._v("  会打印任务编号）来选取该任务。如果要选择最近的一个任务，可以使用  "),a("code",[s._v("$!")]),s._v("  这一特殊参数。")]),s._v(" "),a("p",[s._v("还有一件事情需要掌握，那就是命令中的  "),a("code",[s._v("&")]),s._v("  后缀可以让命令在直接在后台运行，这使得您可以直接在 shell 中继续做其他操作，不过它此时还是会使用 shell 的标准输出，这一点有时会比较恼人（这种情况可以使用 shell 重定向处理）。")]),s._v(" "),a("p",[s._v("让已经在运行的进程转到后台运行，您可以键入"),a("code",[s._v("Ctrl-Z")]),s._v(" ，然后紧接着再输入"),a("code",[s._v("bg")]),s._v("。注意，后台的进程仍然是您的终端进程的子进程，一旦您关闭终端（会发送另外一个信号"),a("code",[s._v("SIGHUP")]),s._v("），这些后台的进程也会终止。为了防止这种情况发生，您可以使用  "),a("code",[s._v("[nohup](https://www.man7.org/linux/man-pages/man1/nohup.1.html)")]),s._v(" (一个用来忽略  "),a("code",[s._v("SIGHUP")]),s._v("  的封装) 来运行程序。针对已经运行的程序，可以使用"),a("code",[s._v("disown")]),s._v(" 。除此之外，您可以使用终端多路复用器来实现，下一章节我们会进行详细地探讨。")]),s._v(" "),a("p",[s._v("下面这个简单的会话中展示来了些概念的应用：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n^Z\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  + "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18653")]),s._v(" suspended  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18745")]),s._v("\nappending output to nohup.out\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("jobs")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  + suspended  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  - running    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bg")]),s._v(" %1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  - "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18653")]),s._v(" continued  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("jobs")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  - running    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  + running    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-STOP")]),s._v(" %1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  + "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18653")]),s._v(" suspended "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("signal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("jobs")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  + suspended "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("signal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  - running    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-SIGHUP")]),s._v(" %1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  + "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18653")]),s._v(" hangup     "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("jobs")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  + running    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-SIGHUP")]),s._v(" %2\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("jobs")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  + running    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" %2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  + "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18745")]),s._v(" terminated  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("jobs")]),s._v("\n")])])]),a("p",[a("code",[s._v("SIGKILL")]),s._v("  是一个特殊的信号，它不能被进程捕获并且它会马上结束该进程。不过这样做会有一些副作用，例如留下孤儿进程。")]),s._v(" "),a("p",[s._v("您可以在  "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Signal_(IPC)",target:"_blank",rel:"noopener noreferrer"}},[s._v("这里"),a("OutboundLink")],1),s._v("  或输入  "),a("code",[s._v("[man signal](https://www.man7.org/linux/man-pages/man7/signal.7.html)")]),s._v("  或使用  "),a("code",[s._v("kill -l")]),s._v("  来获取更多关于信号的信息。")]),s._v(" "),a("h1",{attrs:{id:"_2-终端多路复用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-终端多路复用"}},[s._v("#")]),s._v(" 2. 终端多路复用")]),s._v(" "),a("p",[s._v("当您在使用命令行时，您通常会希望同时执行多个任务。举例来说，您可以想要同时运行您的编辑器，并在终端的另外一侧执行程序。尽管再打开一个新的终端窗口也能达到目的，使用终端多路复用器则是一种更好的办法。")]),s._v(" "),a("p",[s._v("像  "),a("code",[s._v("[tmux](https://www.man7.org/linux/man-pages/man1/tmux.1.html)")]),s._v("  这类的终端多路复用器可以允许我们基于面板和标签分割出多个终端窗口，这样您便可以同时与多个 shell 会话进行交互。")]),s._v(" "),a("p",[s._v("不仅如此，终端多路复用使我们可以分离当前终端会话并在将来重新连接。")]),s._v(" "),a("p",[s._v("这让您操作远端设备时的工作流大大改善，避免了  "),a("code",[s._v("nohup")]),s._v("  和其他类似技巧的使用。")]),s._v(" "),a("p",[s._v("现在最流行的终端多路器是  "),a("code",[s._v("[tmux](https://www.man7.org/linux/man-pages/man1/tmux.1.html)")]),s._v("。"),a("code",[s._v("tmux")]),s._v("  是一个高度可定制的工具，您可以使用相关快捷键创建多个标签页并在它们间导航。")]),s._v(" "),a("p",[a("code",[s._v("tmux")]),s._v("  的快捷键需要我们掌握，它们都是类似  "),a("code",[s._v("<C-b> x")]),s._v("  这样的组合，即需要先按下"),a("code",[s._v("Ctrl+b")]),s._v("，松开后再按下  "),a("code",[s._v("x")]),s._v("。"),a("code",[s._v("tmux")]),s._v("  中对象的继承结构如下：")]),s._v(" "),a("ul",[a("li",[s._v("会话  - 每个会话都是一个独立的工作区，其中包含一个或多个窗口\n"),a("ul",[a("li",[a("code",[s._v("tmux")]),s._v("  开始一个新的会话")]),s._v(" "),a("li",[a("code",[s._v("tmux new -s NAME")]),s._v("  以指定名称开始一个新的会话")]),s._v(" "),a("li",[a("code",[s._v("tmux ls")]),s._v("  列出当前所有会话")]),s._v(" "),a("li",[s._v("在  "),a("code",[s._v("tmux")]),s._v("  中输入  "),a("code",[s._v("<C-b> d")]),s._v(" ，将当前会话分离")]),s._v(" "),a("li",[a("code",[s._v("tmux a")]),s._v("  重新连接最后一个会话。您也可以通过  "),a("code",[s._v("t")]),s._v("  来指定具体的会话")])])]),s._v(" "),a("li",[s._v("窗口  - 相当于编辑器或是浏览器中的标签页，从视觉上将一个会话分割为多个部分\n"),a("ul",[a("li",[a("code",[s._v("<C-b> c")]),s._v("  创建一个新的窗口，使用  "),a("code",[s._v("<C-d>")]),s._v("关闭")]),s._v(" "),a("li",[a("code",[s._v("<C-b> N")]),s._v("  跳转到第  "),a("em",[s._v("N")]),s._v("  个窗口，注意每个窗口都是有编号的")]),s._v(" "),a("li",[a("code",[s._v("<C-b> p")]),s._v("  切换到前一个窗口")]),s._v(" "),a("li",[a("code",[s._v("<C-b> n")]),s._v("  切换到下一个窗口")]),s._v(" "),a("li",[a("code",[s._v("<C-b> ,")]),s._v("  重命名当前窗口")]),s._v(" "),a("li",[a("code",[s._v("<C-b> w")]),s._v("  列出当前所有窗口")])])]),s._v(" "),a("li",[s._v("面板  - 像 vim 中的分屏一样，面板使我们可以在一个屏幕里显示多个 shell\n"),a("ul",[a("li",[a("code",[s._v('<C-b> "')]),s._v("  水平分割")]),s._v(" "),a("li",[a("code",[s._v("<C-b> %")]),s._v("  垂直分割")]),s._v(" "),a("li",[a("code",[s._v("<C-b> <方向>")]),s._v("  切换到指定方向的面板，<方向> 指的是键盘上的方向键")]),s._v(" "),a("li",[a("code",[s._v("<C-b> z")]),s._v("  切换当前面板的缩放")]),s._v(" "),a("li",[a("code",[s._v("<C-b> [")]),s._v("  开始往回卷动屏幕。您可以按下空格键来开始选择，回车键复制选中的部分")]),s._v(" "),a("li",[a("code",[s._v("<C-b> <空格>")]),s._v("  在不同的面板排布间切换")])])])]),s._v(" "),a("p",[s._v("扩展阅读： "),a("a",{attrs:{href:"https://www.hamvocke.com/blog/a-quick-and-easy-guide-to-tmux/",target:"_blank",rel:"noopener noreferrer"}},[s._v("这里"),a("OutboundLink")],1),s._v("  是一份  "),a("code",[s._v("tmux")]),s._v("  快速入门教程， "),a("a",{attrs:{href:"http://linuxcommand.org/lc3_adv_termmux.php",target:"_blank",rel:"noopener noreferrer"}},[s._v("而这一篇"),a("OutboundLink")],1),s._v("  文章则更加详细，它包含了  "),a("code",[s._v("screen")]),s._v("  命令。您也许想要掌握  "),a("code",[s._v("[screen](https://www.man7.org/linux/man-pages/man1/screen.1.html)")]),s._v("  命令，因为在大多数 UNIX 系统中都默认安装有该程序。")]),s._v(" "),a("h1",{attrs:{id:"_3-别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-别名"}},[s._v("#")]),s._v(" 3. 别名")]),s._v(" "),a("p",[s._v("输入一长串包含许多选项的命令会非常麻烦。因此，大多数 shell 都支持设置别名。shell 的别名相当于一个长命令的缩写，shell 会自动将其替换成原本的命令。例如，bash 中的别名语法如下：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("alias_name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"command_to_alias arg1 arg2"')]),s._v("\n")])])]),a("p",[s._v("注意， "),a("code",[s._v("=")]),s._v("两边是没有空格的，因为  "),a("code",[s._v("[alias](https://www.man7.org/linux/man-pages/man1/alias.1p.html)")]),s._v("  是一个 shell 命令，它只接受一个参数。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建常用命令的缩写")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ll")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ls -lh"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 能够少输入很多")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git status"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gc")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git commit"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("v")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vim"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 手误打错命令也没关系")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("sl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ls\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重新定义一些命令行的默认行为")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("mv")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mv -i"')]),s._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -i prompts before overwrite")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("mkdir")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mkdir -p"')]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -p make parent dirs as needed")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("df")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"df -h"')]),s._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -h prints human readable format")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 别名可以组合使用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("la")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ls -A"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("lla")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"la -l"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在忽略某个别名: 命令前加上反斜杠 \\")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("ls\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者禁用别名")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("unalias")]),s._v(" la\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取别名的定义")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" ll\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 会打印 ll='ls -lh'")]),s._v("\n")])])]),a("p",[s._v("值得注意的是，在默认情况下 shell 并不会保存别名。为了让别名持续生效，您需要将配置放进 shell 的启动文件里，像是"),a("code",[s._v(".bashrc")]),s._v("  或  "),a("code",[s._v(".zshrc")]),s._v("。")]),s._v(" "),a("h1",{attrs:{id:"_4-配置文件-dotfiles"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-配置文件-dotfiles"}},[s._v("#")]),s._v(" 4. 配置文件（Dotfiles）")]),s._v(" "),a("p",[s._v("很多程序的配置都是通过纯文本格式的被称作"),a("em",[s._v("点文件")]),s._v("的配置文件来完成的（之所以称为点文件，是因为它们的文件名以  "),a("code",[s._v(".")]),s._v("  开头，例如  "),a("code",[s._v("~/.vimrc")]),s._v("。也正因为此，它们默认是隐藏文件，"),a("code",[s._v("ls")]),s._v("并不会显示它们）。")]),s._v(" "),a("p",[s._v("shell 的配置也是通过这类文件完成的。在启动时，您的 shell 程序会读取很多文件以加载其配置项。根据 shell 本身的不同，您从登录开始还是以交互的方式完成这一过程可能会有很大的不同。关于这一话题，"),a("a",{attrs:{href:"https://blog.flowblok.id.au/2013-02/shell-startup-scripts.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("这里"),a("OutboundLink")],1),s._v("  有非常好的资源")]),s._v(" "),a("p",[s._v("对于  "),a("code",[s._v("bash")]),s._v("来说，在大多数系统下，您可以通过编辑  "),a("code",[s._v(".bashrc")]),s._v("  或  "),a("code",[s._v(".bash_profile")]),s._v("  来进行配置。在文件中您可以添加需要在启动时执行的命令，例如上文我们讲到过的别名，或者是您的环境变量。")]),s._v(" "),a("p",[s._v("实际上，很多程序都要求您在 shell 的配置文件中包含一行类似  "),a("code",[s._v('export PATH="$PATH:/path/to/program/bin"')]),s._v("  的命令，这样才能确保这些程序能够被 shell 找到。")]),s._v(" "),a("p",[s._v("还有一些其他的工具也可以通过"),a("em",[s._v("点文件")]),s._v("进行配置：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("bash")]),s._v(" - "),a("code",[s._v("~/.bashrc")]),s._v(", "),a("code",[s._v("~/.bash_profile")])]),s._v(" "),a("li",[a("code",[s._v("git")]),s._v(" - "),a("code",[s._v("~/.gitconfig")])]),s._v(" "),a("li",[a("code",[s._v("vim")]),s._v(" - "),a("code",[s._v("~/.vimrc")]),s._v("  和  "),a("code",[s._v("~/.vim")]),s._v("  目录")]),s._v(" "),a("li",[a("code",[s._v("ssh")]),s._v(" - "),a("code",[s._v("~/.ssh/config")])]),s._v(" "),a("li",[a("code",[s._v("tmux")]),s._v(" - "),a("code",[s._v("~/.tmux.conf")])])]),s._v(" "),a("p",[s._v("我们应该如何管理这些配置文件呢，它们应该在它们的文件夹下，并使用版本控制系统进行管理，然后通过脚本将其   符号链接   到需要的地方。这么做有如下好处：")]),s._v(" "),a("ul",[a("li",[s._v("安装简单: 如果您登录了一台新的设备，在这台设备上应用您的配置只需要几分钟的时间；")]),s._v(" "),a("li",[s._v("可移植性: 您的工具在任何地方都以相同的配置工作")]),s._v(" "),a("li",[s._v("同步: 在一处更新配置文件，可以同步到其他所有地方")]),s._v(" "),a("li",[s._v("变更追踪: 您可能要在整个程序员生涯中持续维护这些配置文件，而对于长期项目而言，版本历史是非常重要的")])]),s._v(" "),a("p",[s._v("配置文件中需要放些什么？您可以通过在线文档和"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Man_page",target:"_blank",rel:"noopener noreferrer"}},[s._v("帮助手册"),a("OutboundLink")],1),s._v("了解所使用工具的设置项。另一个方法是在网上搜索有关特定程序的文章，作者们在文章中会分享他们的配置。还有一种方法就是直接浏览其他人的配置文件：您可以在这里找到无数的"),a("a",{attrs:{href:"https://github.com/search?o=desc&q=dotfiles&s=stars&type=Repositories",target:"_blank",rel:"noopener noreferrer"}},[s._v("dotfiles 仓库"),a("OutboundLink")],1),s._v(" —— 其中最受欢迎的那些可以在"),a("a",{attrs:{href:"https://github.com/mathiasbynens/dotfiles",target:"_blank",rel:"noopener noreferrer"}},[s._v("这里"),a("OutboundLink")],1),s._v("找到（我们建议您不要直接复制别人的配置）。"),a("a",{attrs:{href:"https://dotfiles.github.io/",target:"_blank",rel:"noopener noreferrer"}},[s._v("这里"),a("OutboundLink")],1),s._v("  也有一些非常有用的资源。")]),s._v(" "),a("p",[s._v("本课程的老师们也在 GitHub 上开源了他们的配置文件： "),a("a",{attrs:{href:"https://github.com/anishathalye/dotfiles",target:"_blank",rel:"noopener noreferrer"}},[s._v("Anish"),a("OutboundLink")],1),s._v(", "),a("a",{attrs:{href:"https://github.com/jonhoo/configs",target:"_blank",rel:"noopener noreferrer"}},[s._v("Jon"),a("OutboundLink")],1),s._v(", "),a("a",{attrs:{href:"https://github.com/jjgo/dotfiles",target:"_blank",rel:"noopener noreferrer"}},[s._v("Jose"),a("OutboundLink")],1),s._v(".")]),s._v(" "),a("h2",{attrs:{id:"_4-1-可移植性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-可移植性"}},[s._v("#")]),s._v(" 4.1 可移植性")]),s._v(" "),a("p",[s._v("配置文件的一个常见的痛点是它可能并不能在多种设备上生效。例如，如果您在不同设备上使用的操作系统或者 shell 是不同的，则配置文件是无法生效的。或者，有时您仅希望特定的配置只在某些设备上生效。")]),s._v(" "),a("p",[s._v("有一些技巧可以轻松达成这些目的。如果配置文件 if 语句，则您可以借助它针对不同的设备编写不同的配置。例如，您的 shell 可以这样做：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Linux"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("do_something"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用和 shell 相关的配置时先检查当前 shell 类型")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$SHELL")]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zsh"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("do_something"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 您也可以针对特定的设备进行配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hostname")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"myServer"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("do_something"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),a("p",[s._v("如果配置文件支持 include 功能，您也可以多加利用。例如："),a("code",[s._v("~/.gitconfig")]),s._v("  可以这样编写：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("include"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    path "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ~/.gitconfig_local\n")])])]),a("p",[s._v("然后我们可以在日常使用的设备上创建配置文件  "),a("code",[s._v("~/.gitconfig_local")]),s._v("  来包含与该设备相关的特定配置。您甚至应该创建一个单独的代码仓库来管理这些与设备相关的配置。")]),s._v(" "),a("p",[s._v("如果您希望在不同的程序之间共享某些配置，该方法也适用。例如，如果您想要在  "),a("code",[s._v("bash")]),s._v("  和  "),a("code",[s._v("zsh")]),s._v("  中同时启用一些别名，您可以把它们写在  "),a("code",[s._v(".aliases")]),s._v("  里，然后在这两个 shell 里应用：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Test if ~/.aliases exists and source it")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" ~/.aliases "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/.aliases\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),a("h1",{attrs:{id:"_5-远端设备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-远端设备"}},[s._v("#")]),s._v(" 5. 远端设备")]),s._v(" "),a("p",[s._v("对于程序员来说，在他们的日常工作中使用远程服务器已经非常普遍了。如果您需要使用远程服务器来部署后端软件或您需要一些计算能力强大的服务器，您就会用到安全 shell（SSH）。和其他工具一样，SSH 也是可以高度定制的，也值得我们花时间学习它。")]),s._v(" "),a("p",[s._v("通过如下命令，您可以使用  "),a("code",[s._v("ssh")]),s._v("  连接到其他服务器：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" foo@bar.mit.edu\n")])])]),a("p",[s._v("这里我们尝试以用户名  "),a("code",[s._v("foo")]),s._v("  登录服务器  "),a("code",[s._v("bar.mit.edu")]),s._v("。服务器可以通过 URL 指定（例如"),a("code",[s._v("bar.mit.edu")]),s._v("），也可以使用 IP 指定（例如"),a("code",[s._v("foobar@192.168.1.42")]),s._v("）。后面我们会介绍如何修改 ssh 配置文件使我们可以用类似  "),a("code",[s._v("ssh bar")]),s._v("  这样的命令来登录服务器。")]),s._v(" "),a("h2",{attrs:{id:"_5-1-执行命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-执行命令"}},[s._v("#")]),s._v(" 5.1 执行命令")]),s._v(" "),a("p",[a("code",[s._v("ssh")]),s._v("  的一个经常被忽视的特性是它可以直接远程执行命令。 "),a("code",[s._v("ssh foobar@server ls")]),s._v("  可以直接在用 foobar 的命令下执行  "),a("code",[s._v("ls")]),s._v("  命令。 想要配合管道来使用也可以， "),a("code",[s._v("ssh foobar@server ls | grep PATTERN")]),s._v("  会在本地查询远端  "),a("code",[s._v("ls")]),s._v("  的输出而  "),a("code",[s._v("ls | ssh foobar@server grep PATTERN")]),s._v("  会在远端对本地  "),a("code",[s._v("ls")]),s._v("  输出的结果进行查询。")]),s._v(" "),a("h2",{attrs:{id:"_5-2-ssh-密钥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-ssh-密钥"}},[s._v("#")]),s._v(" 5.2 SSH 密钥")]),s._v(" "),a("p",[s._v("基于密钥的验证机制使用了密码学中的公钥，我们只需要向服务器证明客户端持有对应的私钥，而不需要公开其私钥。这样您就可以避免每次登录都输入密码的麻烦了秘密就可以登录。不过，私钥(通常是  "),a("code",[s._v("~/.ssh/id_rsa")]),s._v("  或者  "),a("code",[s._v("~/.ssh/id_ed25519")]),s._v(") 等效于您的密码，所以一定要好好保存它。")]),s._v(" "),a("h3",{attrs:{id:"_5-2-1-密钥生成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-密钥生成"}},[s._v("#")]),s._v(" 5.2.1 密钥生成")]),s._v(" "),a("p",[s._v("使用  "),a("code",[s._v("[ssh-keygen](http://man7.org/linux/man-pages/man1/ssh-keygen.1.html)")]),s._v("  命令可以生成一对密钥：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("ssh-keygen "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" ed25519 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" ~/.ssh/id_ed25519\n")])])]),a("p",[s._v("您可以为密钥设置密码，防止有人持有您的私钥并使用它访问您的服务器。您可以使用  "),a("code",[s._v("[ssh-agent](https://www.man7.org/linux/man-pages/man1/ssh-agent.1.html)")]),s._v("  或  "),a("code",[s._v("[gpg-agent](https://linux.die.net/man/1/gpg-agent)")]),s._v(" ，这样就不需要每次都输入该密码了。")]),s._v(" "),a("p",[s._v("如果您曾经配置过使用 SSH 密钥推送到 GitHub，那么可能您已经完成了"),a("a",{attrs:{href:"https://help.github.com/articles/connecting-to-github-with-ssh/",target:"_blank",rel:"noopener noreferrer"}},[s._v("这里"),a("OutboundLink")],1),s._v("  介绍的这些步骤，并且已经有了一个可用的密钥对。要检查您是否持有密码并验证它，您可以运行  "),a("code",[s._v("ssh-keygen -y -f /path/to/key")]),s._v(".")]),s._v(" "),a("h3",{attrs:{id:"_5-2-2-基于密钥的认证机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-基于密钥的认证机制"}},[s._v("#")]),s._v(" 5.2.2 基于密钥的认证机制")]),s._v(" "),a("p",[a("code",[s._v("ssh")]),s._v("  会查询  "),a("code",[s._v(".ssh/authorized_keys")]),s._v("  来确认那些用户可以被允许登录。您可以通过下面的命令将一个公钥拷贝到这里：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" .ssh/id_ed25519.pub "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" foobar@remote "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cat >> ~/.ssh/authorized_keys'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果支持 ssh-copy-id 的话，可以使用下面这种更简单的解决方案：")]),s._v("\nssh-copy-id "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" .ssh/id_ed25519.pub foobar@remote\n")])])]),a("p",[s._v("在 GitHub（或其他类似的服务）上使用 SSH 密钥时，邮箱地址作为一个注释或标识附加到公钥的末尾。这并不是 SSH 密钥本身所必需的，而是为了帮助识别公钥的所有者。当你在多个设备上生成不同的 SSH 密钥并将它们添加到 GitHub 时，邮箱地址可以帮助你区分每个密钥对应的设备或用途。")]),s._v(" "),a("p",[s._v("在使用 "),a("code",[s._v("ssh-keygen")]),s._v(" 生成密钥时，通常在命令行最后提示你输入一个文件名来保存新的密钥时，你可以附加一个注释，如你的电子邮箱。例如：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("ssh-keygen "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" rsa "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your_email@example.com"')]),s._v("\n")])])]),a("p",[s._v("这里 "),a("code",[s._v('-C "your_email@example.com"')]),s._v(" 就是为生成的公钥添加一个标签或注释，通常是你的电子邮件地址。当你将公钥添加到 GitHub 时，这个邮箱地址会一同显示，但它不影响密钥的功能。这个注释在公钥的末尾，不参与密钥认证过程，仅仅是为了方便用户识别。")]),s._v(" "),a("p",[s._v("一个电脑可以拥有多个 SSH 密钥对，而不仅限于一个。SSH 密钥对通常包括两部分：一个私钥和一个公钥。私钥应该保密不外泄，而公钥可以安全地分享给任何人或任何服务。")]),s._v(" "),a("p",[s._v("在同一台电脑上生成多个 SSH 密钥对可以用于不同目的，比如你可能想为不同的服务器或服务使用不同的密钥对，或者你可能需要不同类型或不同加密强度的密钥对。生成不同的密钥对可以提高安全性，因为即使一个密钥对被破解或泄露，其他密钥对仍然是安全的。")]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("ssh-keygen")]),s._v(" 命令生成密钥对时，如果不指定输出文件（使用 "),a("code",[s._v("-f")]),s._v(" 选项），默认会在 "),a("code",[s._v("~/.ssh")]),s._v(" 目录下生成名为 "),a("code",[s._v("id_rsa")]),s._v(" 的私钥和名为 "),a("code",[s._v("id_rsa.pub")]),s._v(" 的公钥。如果该文件已经存在，"),a("code",[s._v("ssh-keygen")]),s._v(" 会提示是否覆盖。为了生成多个密钥对，你可以指定不同的文件名来保存新的密钥对，例如：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("ssh-keygen "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" rsa "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" ~/.ssh/id_rsa_github\nssh-keygen "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" ed25519 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" ~/.ssh/id_ed25519_gitlab\n")])])]),a("p",[s._v("这样，你就可以为不同的服务创建专用的密钥对。在连接时，你可以在 SSH 客户端配置文件（"),a("code",[s._v("~/.ssh/config")]),s._v("）中指定使用哪个密钥对，或者在使用 "),a("code",[s._v("ssh")]),s._v(" 命令时通过 "),a("code",[s._v("-i")]),s._v(" 选项指定私钥的路径。")]),s._v(" "),a("p",[s._v("记得，每个生成的公钥（例如 "),a("code",[s._v("id_rsa_github.pub")]),s._v(" 和 "),a("code",[s._v("id_ed25519_gitlab.pub")]),s._v("）可以上传到相应的服务上（如 GitHub 或 GitLab），而对应的私钥则应该安全地存储在你的设备上，不应该泄露或被无关人员访问。")]),s._v(" "),a("h2",{attrs:{id:"_5-3-通过-ssh-复制文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-通过-ssh-复制文件"}},[s._v("#")]),s._v(" 5.3 通过 SSH 复制文件")]),s._v(" "),a("p",[s._v("使用 ssh 复制文件有很多方法：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("ssh+tee")]),s._v(", 最简单的方法是执行  "),a("code",[s._v("ssh")]),s._v("  命令，然后通过这样的方法利用标准输入实现  "),a("code",[s._v("cat localfile | ssh remote_server tee serverfile")]),s._v("。回忆一下，"),a("code",[s._v("[tee](https://www.man7.org/linux/man-pages/man1/tee.1.html)")]),s._v("  命令会将标准输出写入到一个文件；")]),s._v(" "),a("li",[a("code",[s._v("[scp](https://www.man7.org/linux/man-pages/man1/scp.1.html)")]),s._v(" ：当需要拷贝大量的文件或目录时，使用"),a("code",[s._v("scp")]),s._v("  命令则更加方便，因为它可以方便的遍历相关路径。语法如下："),a("code",[s._v("scp path/to/local_file remote_host:path/to/remote_file")]),s._v("；")]),s._v(" "),a("li",[a("code",[s._v("[rsync](https://www.man7.org/linux/man-pages/man1/rsync.1.html)")]),s._v("  对  "),a("code",[s._v("scp")]),s._v("  进行了改进，它可以检测本地和远端的文件以防止重复拷贝。它还可以提供一些诸如符号连接、权限管理等精心打磨的功能。甚至还可以基于  "),a("code",[s._v("-partial")]),s._v("标记实现断点续传。"),a("code",[s._v("rsync")]),s._v("  的语法和"),a("code",[s._v("scp")]),s._v("类似；")])]),s._v(" "),a("h2",{attrs:{id:"_5-4-端口转发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-端口转发"}},[s._v("#")]),s._v(" 5.4 端口转发")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("LocalForward "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9999")]),s._v(" localhost:8888\n")])])]),a("p",[a("code",[s._v("LocalForward 9999 localhost:8888")]),s._v(" 是 SSH 配置文件中的一个指令，用于设置本地端口转发。这一行指令的出现在 SSH 配置文件（通常是 "),a("code",[s._v("~/.ssh/config")]),s._v("）中表示以下行为：")]),s._v(" "),a("ul",[a("li",[s._v("当你通过 SSH 连接到指定的主机时，SSH 客户端会创建一个本地监听端口（在这个例子中是 9999）。")]),s._v(" "),a("li",[s._v("任何发送到你本地机器上的 9999 端口的数据都会被转发到通过 SSH 连接的远程机器上的 "),a("code",[s._v("localhost:8888")]),s._v(" 地址和端口上。")]),s._v(" "),a("li",[s._v("在这个上下文中，"),a("code",[s._v("localhost")]),s._v(" 是指远程机器的本地回环接口，而不是你的本地机器。所以，实际上数据是从本地机器的 9999 端口转发到远程机器的 8888 端口。")])]),s._v(" "),a("p",[s._v("在实际应用中，这种端口转发可以用于多种情况，例如：")]),s._v(" "),a("ul",[a("li",[s._v("访问在远程主机上运行的 web 应用或服务，就像它们在本地主机上一样。")]),s._v(" "),a("li",[s._v("通过 SSH 保护未加密的网络通信，因为数据传输会在 SSH 的加密隧道中进行。")]),s._v(" "),a("li",[s._v("绕过防火墙或网络限制，访问仅在远程网络上可访问的资源。")])]),s._v(" "),a("p",[s._v("在你提供的配置中，如果有服务在远程主机的 "),a("code",[s._v("localhost:8888")]),s._v(" 上监听，你可以简单地通过访问你本地机器上的 "),a("code",[s._v("localhost:9999")]),s._v(" 来访问它，所有通信都会安全地通过 SSH 隧道转发。")]),s._v(" "),a("h2",{attrs:{id:"_5-5-ssh-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-ssh-配置"}},[s._v("#")]),s._v(" 5.5 SSH 配置")]),s._v(" "),a("p",[s._v("使用  "),a("code",[s._v("~/.ssh/config")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("Host vm\n    User foobar\n    HostName "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".174.141\n    Port "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2222")]),s._v("\n    IdentityFile ~/.ssh/id_ed25519\n    LocalForward "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9999")]),s._v(" localhost:8888\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在配置文件中也可以使用通配符")]),s._v("\nHost *.mit.edu\n    User foobaz\n")])])]),a("p",[s._v("这么做的好处是，使用  "),a("code",[s._v("~/.ssh/config")]),s._v("  文件来创建别名，类似  "),a("code",[s._v("scp")]),s._v("、"),a("code",[s._v("rsync")]),s._v("和"),a("code",[s._v("mosh")]),s._v("的这些命令都可以读取这个配置并将设置转换为对应的命令行选项。")]),s._v(" "),a("p",[s._v("注意，"),a("code",[s._v("~/.ssh/config")]),s._v("  文件也可以被当作配置文件，而且一般情况下也是可以被导入其他配置文件的。不过，如果您将其公开到互联网上，那么其他人都将会看到您的服务器地址、用户名、开放端口等等。这些信息可能会帮助到那些企图攻击您系统的黑客，所以请务必三思。")]),s._v(" "),a("p",[s._v("服务器侧的配置通常放在  "),a("code",[s._v("/etc/ssh/sshd_config")]),s._v("。您可以在这里配置免密认证、修改 ssh 端口、开启 X11 转发等等。 您也可以为每个用户单独指定配置。")]),s._v(" "),a("h1",{attrs:{id:"_6-exercise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-exercise"}},[s._v("#")]),s._v(" 6. Exercise")]),s._v(" "),a("h2",{attrs:{id:"_6-1-任务控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-任务控制"}},[s._v("#")]),s._v(" 6.1 任务控制")]),s._v(" "),a("h3",{attrs:{id:"_6-1-1-pgrep-pkill"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-1-pgrep-pkill"}},[s._v("#")]),s._v(" 6.1.1 pgrep & pkill")]),s._v(" "),a("p",[s._v("我们可以使用类似  "),a("code",[s._v("ps aux | grep")]),s._v("  这样的命令来获取任务的 pid ，然后您可以基于 pid 来结束这些进程。但我们其实有更好的方法来做这件事。在终端中执行  "),a("code",[s._v("sleep 10000")]),s._v("  这个任务。然后用  "),a("code",[s._v("Ctrl-Z")]),s._v("  将其切换到后台并使用  "),a("code",[s._v("bg")]),s._v("来继续允许它。现在，使用  "),a("code",[s._v("[pgrep](https://www.man7.org/linux/man-pages/man1/pgrep.1.html)")]),s._v("  来查找 pid 并使用  "),a("code",[s._v("[pkill](https://www.man7.org/linux/man-pages/man1/pgrep.1.html)")]),s._v("  结束进程而不需要手动输入 pid。(提示：: 使用  "),a("code",[s._v("-af")]),s._v("  标记)。")]),s._v(" "),a("p",[a("img",{attrs:{src:t(356),alt:"Untitled"}})]),s._v(" "),a("h3",{attrs:{id:"_6-1-2-pidwait"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-2-pidwait"}},[s._v("#")]),s._v(" 6.1.2 pidwait")]),s._v(" "),a("p",[s._v("如果您希望某个进程结束后再开始另外一个进程， 应该如何实现呢？在这个练习中，我们使用  "),a("code",[s._v("sleep 60 &")]),s._v("  作为先执行的程序。一种方法是使用  "),a("code",[s._v("[wait](http://man7.org/linux/man-pages/man1/wait.1p.html)")]),s._v("  命令。尝试启动这个休眠命令，然后待其结束后再执行  "),a("code",[s._v("ls")]),s._v("  命令。")]),s._v(" "),a("p",[s._v("但是，如果我们在不同的 bash 会话中进行操作，则上述方法就不起作用了。因为  "),a("code",[s._v("wait")]),s._v("  只能对子进程起作用。之前我们没有提过的一个特性是，"),a("code",[s._v("kill")]),s._v("  命令成功退出时其状态码为 0 ，其他状态则是非 0。"),a("code",[s._v("kill -0")]),s._v("  则不会发送信号，但是会在进程不存在时返回一个不为 0 的状态码。请编写一个 bash 函数  "),a("code",[s._v("pidwait")]),s._v(" ，它接受一个 pid 作为输入参数，然后一直等待直到该进程结束。您需要使用  "),a("code",[s._v("sleep")]),s._v("  来避免浪费 CPU 性能。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#! /usr/bin/env zsh")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("pidwait")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# here while loop will keep checking if the process is still running")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if the process is still running, it will sleep for 1 second and then check again")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if the process is not running, it will list the files in the current directory")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kill -0 returns 0 if the process is running, 1 if the process is not running")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# while 0 is returned, the loop will keep running")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[a("img",{attrs:{src:t(357),alt:"Untitled"}})]),s._v(" "),a("h2",{attrs:{id:"_6-2-配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-配置文件"}},[s._v("#")]),s._v(" 6.2 配置文件")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/usr/bin/env zsh")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# copy.sh")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# copy all dotfiles to ./dotfiles")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mkdir ./dotfiles if it doesn't exist")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./dotfiles"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" ./dotfiles\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" ~/.zshrc ./dotfiles\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" ~/.vimrc ./dotfiles\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Copied dotfiles to ./dotfiles"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-lah")]),s._v(" ./dotfiles\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# autoconfig.sh")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("files")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" $1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-E")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.[^.]+'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" .git"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 去掉 ls -a 返回结果中的 ". .. .git"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("file")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" $files"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-s")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$file")]),s._v(" ~/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$file")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建软链接")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);