(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{436:function(s,a,t){"use strict";t.r(a);var e=t(14),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_2024-03-14-1-the-shell"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2024-03-14-1-the-shell"}},[s._v("#")]),s._v(" 2024.03.14-1. The Shell")]),s._v(" "),a("h2",{attrs:{id:"_1-echo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-echo"}},[s._v("#")]),s._v(" 1. echo")]),s._v(" "),a("p",[a("code",[s._v("echo")]),s._v("  程序将该参数打印出来。 shell 基于空格分割命令并进行解析，然后执行第一个单词代表的程序，并将后续的单词作为程序可以访问的参数。如果您希望传递的参数中包含空格（例如一个名为 My Photos 的文件夹），您要么用使用单引号，双引号将其包裹起来，要么使用转义符号  "),a("code",[s._v("\\")]),s._v("  进行处理（"),a("code",[s._v("My\\ Photos")]),s._v("）。")]),s._v(" "),a("h2",{attrs:{id:"_2-cd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-cd"}},[s._v("#")]),s._v(" 2. cd")]),s._v(" "),a("p",[s._v("切换到上次访问的目录：使用  cd -  可以切换到上次访问的目录。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" -\n")])])]),a("h2",{attrs:{id:"_3-在程序间创建连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-在程序间创建连接"}},[s._v("#")]),s._v(" 3. 在程序间创建连接")]),s._v(" "),a("p",[s._v("在 shell 中，程序有两个主要的“流”：它们的输入流和输出流。 当程序尝试读取信息时，它们会从输入流中进行读取，当程序打印信息时，它们会将信息输出到输出流中。 通常，一个程序的输入输出流都是您的终端。也就是，您的键盘作为输入，显示器作为输出。 但是，我们也可以重定向这些流！")]),s._v(" "),a("p",[s._v("最简单的重定向是  "),a("code",[s._v("< file")]),s._v("  和  "),a("code",[s._v("> file")]),s._v("。这两个命令可以将程序的输入输出流分别重定向到文件：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("missing:~$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hello.txt\nmissing:~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" hello.txt\nhello\nmissing:~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" hello.txt\nhello\nmissing:~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" hello.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" hello2.txt\nmissing:~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" hello2.txt\nhello\n")])])]),a("p",[s._v("您还可以使用  "),a("code",[s._v(">>")]),s._v("  来向一个文件追加内容。")]),s._v(" "),a("p",[s._v("使用管道（ "),a("em",[s._v("pipes")]),s._v(" ），我们能够更好的利用文件重定向。 "),a("code",[s._v("|")]),s._v("  操作符允许我们将一个程序的输出和另外一个程序的输入连接起来：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("missing:~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v(" / "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n1")]),s._v("\ndrwxr-xr-x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root  root  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),s._v(" Jun "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2019")]),s._v(" var\nmissing:~$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--head")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--silent")]),s._v(" google.com "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" --ignore-case content-length "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--delimiter")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("219")]),s._v("\n")])])]),a("h2",{attrs:{id:"_4-clear"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-clear"}},[s._v("#")]),s._v(" 4. clear")]),s._v(" "),a("p",[s._v("ctrl+L")]),s._v(" "),a("h2",{attrs:{id:"_5-权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-权限"}},[s._v("#")]),s._v(" 5. 权限")]),s._v(" "),a("p",[s._v("例如，您笔记本电脑的屏幕亮度写在  "),a("code",[s._v("brightness")]),s._v("  文件中，它位于 "),a("code",[s._v("/sys/class/backlight")])]),s._v(" "),a("p",[s._v("通过将数值写入该文件，我们可以改变屏幕的亮度。现在，蹦到您脑袋里的第一个想法可能是：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-L")]),s._v(" /sys/class/backlight "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-maxdepth")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*brightness*'")]),s._v("\n/sys/class/backlight/thinkpad_screen/brightness\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /sys/class/backlight/thinkpad_screen\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" brightness\nAn error occurred "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" redirecting "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'brightness'")]),s._v("\nopen: Permission denied\n")])])]),a("p",[s._v("出乎意料的是，我们还是得到了一个错误信息。毕竟，我们已经使用了  "),a("code",[s._v("sudo")]),s._v("  命令！关于 shell，有件事我们必须要知道。"),a("code",[s._v("|")]),s._v("、"),a("code",[s._v(">")]),s._v("、和  "),a("code",[s._v("<")]),s._v("  是通过 shell 执行的，而不是被各个程序单独执行。 "),a("code",[s._v("echo")]),s._v("  等程序并不知道  "),a("code",[s._v("|")]),s._v("  的存在，它们只知道从自己的输入输出流中进行读写。 对于上面这种情况，"),a("em",[s._v("shell")]),s._v(" (权限为您的当前用户) 在设置  "),a("code",[s._v("sudo echo")]),s._v("  前尝试打开 brightness 文件并写入，但是系统拒绝了 shell 的操作因为此时 shell 不是根用户。")]),s._v(" "),a("p",[s._v("明白这一点后，我们可以这样操作：")]),s._v(" "),a("p",[a("code",[s._v("$ echo 3 | sudo tee brightness")])]),s._v(" "),a("p",[s._v("因为打开  "),a("code",[s._v("/sys")]),s._v("  文件的是  "),a("code",[s._v("tee")]),s._v("  这个程序，并且该程序以  "),a("code",[s._v("root")]),s._v("  权限在运行，因此操作可以进行。 这样您就可以在  "),a("code",[s._v("/sys")]),s._v("  中愉快地玩耍了，例如修改系统中各种 LED 的状态（路径可能会有所不同）：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /sys/class/leds/input6::scrolllock/brightness\n")])])]),a("h2",{attrs:{id:"_6-单引号与双引号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-单引号与双引号"}},[s._v("#")]),s._v(" 6. 单引号与双引号")]),s._v(" "),a("p",[s._v("单引号是全引用，被单引号括起的内容不管是常量还是变量都不会发生替换。")]),s._v(" "),a("p",[s._v("也就是说单引号定义字符串所见即所得，将单引号内的内容输出，看到的是什么就会输出什么。")]),s._v(" "),a("p",[s._v("双引号引用的内容，如果内容中有命令、变量等，会先把变量、命令解析出结果，然后在输出最终内容。双引号是部分引用，被双引号括起的内容常量还是常量，变量则会发生替换，替换成变量内容。")])])}),[],!1,null,null,null);a.default=r.exports}}]);