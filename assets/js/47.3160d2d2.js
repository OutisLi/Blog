(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{326:function(t,s,a){t.exports=a.p+"assets/img/100.f1925d8e.png"},422:function(t,s,a){"use strict";a.r(s);var n=a(14),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_2024-04-04-练习10-字符串数组和循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2024-04-04-练习10-字符串数组和循环"}},[t._v("#")]),t._v(" 2024.04.04-练习10：字符串数组和循环")]),t._v(" "),s("h2",{attrs:{id:"_1-字符串数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-字符串数组"}},[t._v("#")]),t._v(" 1. "),s("strong",[t._v("字符串数组")])]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// go through each string in argv")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// why am I skipping argv[0]?")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" argc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"arg %d: %s\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let's make our own array of strings")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("states"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"California"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Oregon"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Washington"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Texas"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num_states "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" num_states"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"state %d: %s\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" states"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("argv[0]")]),t._v(" 是程序的名称")]),t._v(" "),s("p",[t._v("如果 num_states 大于4，会报段错误，因为这些索引超出了数组 "),s("code",[t._v("states")]),t._v(" ****的初始化范围，它们没有被初始化指向任何有效的字符串。")]),t._v(" "),s("h2",{attrs:{id:"_2-附加题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-附加题"}},[t._v("#")]),t._v(" 2. 附加题")]),t._v(" "),s("h3",{attrs:{id:"_2-1-在for循环的每一部分可以放置什么代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-在for循环的每一部分可以放置什么代码"}},[t._v("#")]),t._v(" 2.1 在"),s("code",[t._v("for")]),t._v("循环的每一部分可以放置什么代码")]),t._v(" "),s("ol",[s("li",[t._v("初始化表达式")])]),t._v(" "),s("ul",[s("li",[t._v("这部分在循环开始前执行一次。")]),t._v(" "),s("li",[t._v("常用于初始化循环控制变量。")]),t._v(" "),s("li",[t._v("可以定义一个或多个变量（C99标准之后），也可以是空操作，如果没有需要初始化的变量。")]),t._v(" "),s("li",[t._v("可以执行任何有效的赋值操作或函数调用。")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("条件表达式")])]),t._v(" "),s("ul",[s("li",[t._v("这部分在每次循环迭代之前评估。")]),t._v(" "),s("li",[t._v("决定是否执行循环体。")]),t._v(" "),s("li",[t._v("必须是能够评估为布尔值的表达式。如果表达式结果为"),s("code",[t._v("true")]),t._v("（非零），循环继续；如果为"),s("code",[t._v("false")]),t._v("（零），循环结束。")]),t._v(" "),s("li",[t._v("可以是复杂的表达式，包含逻辑和关系运算符。")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("循环后表达式")])]),t._v(" "),s("ul",[s("li",[t._v("这部分在每次循环迭代的末尾执行，即循环体执行完毕后。")]),t._v(" "),s("li",[t._v("通常用于更新循环控制变量。")]),t._v(" "),s("li",[t._v("可以执行多个更新操作，使用逗号运算符分隔。")])]),t._v(" "),s("h3",{attrs:{id:"_2-2-for-循环中的逗号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-for-循环中的逗号"}},[t._v("#")]),t._v(" 2.2 "),s("code",[t._v("for")]),t._v(" 循环中的逗号")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-3-null"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-null"}},[t._v("#")]),t._v(" 2.3 "),s("code",[t._v("NULL")])]),t._v(" "),s("p",[t._v("在C语言中，"),s("code",[t._v("NULL")]),t._v("是一个宏，通常用来表示指针不指向任何有效的对象或位置。它在多个头文件中被定义，如"),s("code",[t._v("<stddef.h>")]),t._v("、"),s("code",[t._v("<stdio.h>")]),t._v("、"),s("code",[t._v("<stdlib.h>")]),t._v("等，通常被定义为"),s("code",[t._v("((void *)0)")]),t._v("，即一个类型为"),s("code",[t._v("void*")]),t._v("的空指针。")]),t._v(" "),s("p",[t._v("将"),s("code",[t._v("NULL")]),t._v("用作字符指针数组"),s("code",[t._v("states")]),t._v("的一个元素，相当于在数组中插入一个不指向任何有效字符串的指针。在打印时，尝试访问这个"),s("code",[t._v("NULL")]),t._v("指针所指向的字符串将触发未定义行为（Undefined Behavior, UB），因为试图访问一个不存在的内存位置。在大多数情况下，这可能会导致程序崩溃，因为"),s("code",[t._v("printf")]),t._v("的"),s("code",[t._v("%s")]),t._v("格式化选项期望一个指向有效C字符串的指针。")]),t._v(" "),s("h3",{attrs:{id:"_2-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4"}},[t._v("#")]),t._v(" 2.4")]),t._v(" "),s("p",[s("img",{attrs:{src:a(326),alt:"Untitled"}})])])}),[],!1,null,null,null);s.default=r.exports}}]);